function cov_lbrg5n5ab(){var path="/home/user225/sample-master-2021/api-server/src/routes/config.js";var hash="236d0317afa558f45a32f42154f6bee988acc8e3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/user225/sample-master-2021/api-server/src/routes/config.js",statementMap:{"0":{start:{line:4,column:16},end:{line:4,column:34}},"1":{start:{line:5,column:15},end:{line:5,column:31}},"2":{start:{line:6,column:11},end:{line:6,column:48}},"3":{start:{line:11,column:0},end:{line:13,column:3}},"4":{start:{line:12,column:3},end:{line:12,column:39}},"5":{start:{line:20,column:0},end:{line:22,column:3}},"6":{start:{line:21,column:3},end:{line:21,column:57}},"7":{start:{line:24,column:0},end:{line:24,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:16},end:{line:11,column:17}},loc:{start:{line:11,column:30},end:{line:13,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:20},end:{line:20,column:21}},loc:{start:{line:20,column:34},end:{line:22,column:1}},line:20}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0,"1":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"236d0317afa558f45a32f42154f6bee988acc8e3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_lbrg5n5ab=function(){return actualCoverage;};}return actualCoverage;}cov_lbrg5n5ab();/**
 * returns data for '/config' routes
 */const express=(cov_lbrg5n5ab().s[0]++,require('express'));const router=(cov_lbrg5n5ab().s[1]++,express.Router());const cg=(cov_lbrg5n5ab().s[2]++,require('../services/config.service'));/**
 * GET /config
 */cov_lbrg5n5ab().s[3]++;router.get('/',(req,res)=>{cov_lbrg5n5ab().f[0]++;cov_lbrg5n5ab().s[4]++;res.json({config:cg.getConfig()});});/**
 * GET /config/:key where :key is replaced by the config KVP key that you want to retrieve
 * For example: /config/version will return {version: 0.0.1} or whatever the version is.
 * If a key does not exist the value will be returned as null
 */cov_lbrg5n5ab().s[5]++;router.get('/:key',(req,res)=>{cov_lbrg5n5ab().f[1]++;cov_lbrg5n5ab().s[6]++;res.json({config:cg.getConfigByKey(req.params.key)});});cov_lbrg5n5ab().s[7]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImNnIiwiZ2V0IiwicmVxIiwicmVzIiwianNvbiIsImNvbmZpZyIsImdldENvbmZpZyIsImdldENvbmZpZ0J5S2V5IiwicGFyYW1zIiwia2V5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Imc0Q0FlWTt5RkFmWjtBQUNBO0FBQ0EsR0FDQSxLQUFNQSxDQUFBQSxPQUFPLHlCQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFWLENBQWIsQ0FDQSxLQUFNQyxDQUFBQSxNQUFNLHlCQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBSCxDQUFaLENBQ0EsS0FBTUMsQ0FBQUEsRUFBRSx5QkFBR0gsT0FBTyxDQUFDLDRCQUFELENBQVYsQ0FBUixDQUVBO0FBQ0E7QUFDQSxHLHVCQUNBQyxNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLENBQWdCLENBQUNDLEdBQUQsQ0FBTUMsR0FBTixHQUFjLCtDQUMzQkEsR0FBRyxDQUFDQyxJQUFKLENBQVMsQ0FBRUMsTUFBTSxDQUFFTCxFQUFFLENBQUNNLFNBQUgsRUFBVixDQUFULEVBQ0YsQ0FGRCxFQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyx1QkFDQVIsTUFBTSxDQUFDRyxHQUFQLENBQVcsT0FBWCxDQUFvQixDQUFDQyxHQUFELENBQU1DLEdBQU4sR0FBYywrQ0FDL0JBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLENBQUNDLE1BQU0sQ0FBRUwsRUFBRSxDQUFDTyxjQUFILENBQWtCTCxHQUFHLENBQUNNLE1BQUosQ0FBV0MsR0FBN0IsQ0FBVCxDQUFULEVBQ0YsQ0FGRCxFLHVCQUlBQyxNQUFNLENBQUNDLE9BQVAsQ0FBaUJiLE1BQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiByZXR1cm5zIGRhdGEgZm9yICcvY29uZmlnJyByb3V0ZXNcbiAqL1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBjZyA9IHJlcXVpcmUoJy4uL3NlcnZpY2VzL2NvbmZpZy5zZXJ2aWNlJyk7XG5cbi8qKlxuICogR0VUIC9jb25maWdcbiAqL1xucm91dGVyLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICAgcmVzLmpzb24oeyBjb25maWc6IGNnLmdldENvbmZpZygpfSk7XG59KTtcblxuLyoqXG4gKiBHRVQgL2NvbmZpZy86a2V5IHdoZXJlIDprZXkgaXMgcmVwbGFjZWQgYnkgdGhlIGNvbmZpZyBLVlAga2V5IHRoYXQgeW91IHdhbnQgdG8gcmV0cmlldmVcbiAqIEZvciBleGFtcGxlOiAvY29uZmlnL3ZlcnNpb24gd2lsbCByZXR1cm4ge3ZlcnNpb246IDAuMC4xfSBvciB3aGF0ZXZlciB0aGUgdmVyc2lvbiBpcy5cbiAqIElmIGEga2V5IGRvZXMgbm90IGV4aXN0IHRoZSB2YWx1ZSB3aWxsIGJlIHJldHVybmVkIGFzIG51bGxcbiAqL1xucm91dGVyLmdldCgnLzprZXknLCAocmVxLCByZXMpID0+IHtcbiAgIHJlcy5qc29uKHtjb25maWc6IGNnLmdldENvbmZpZ0J5S2V5KHJlcS5wYXJhbXMua2V5KX0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19