function cov_2pijzdnxhl(){var path="/home/user225/sample-master-2021/api-server/src/services/class.mock.database.service.js";var hash="90b5e71d90ec92a10be9e9bda044a24b702aaa30";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/user225/sample-master-2021/api-server/src/services/class.mock.database.service.js",statementMap:{"0":{start:{line:2,column:15},end:{line:2,column:27}},"1":{start:{line:5,column:8},end:{line:11,column:25}},"2":{start:{line:12,column:8},end:{line:18,column:25}},"3":{start:{line:28,column:24},end:{line:28,column:51}},"4":{start:{line:29,column:19},end:{line:29,column:28}},"5":{start:{line:30,column:8},end:{line:35,column:9}},"6":{start:{line:32,column:12},end:{line:32,column:81}},"7":{start:{line:34,column:12},end:{line:34,column:50}},"8":{start:{line:36,column:8},end:{line:36,column:57}},"9":{start:{line:37,column:25},end:{line:37,column:62}},"10":{start:{line:38,column:8},end:{line:38,column:44}},"11":{start:{line:39,column:8},end:{line:43,column:9}},"12":{start:{line:40,column:12},end:{line:40,column:42}},"13":{start:{line:42,column:12},end:{line:42,column:37}},"14":{start:{line:52,column:21},end:{line:52,column:23}},"15":{start:{line:53,column:8},end:{line:57,column:9}},"16":{start:{line:54,column:12},end:{line:54,column:42}},"17":{start:{line:56,column:12},end:{line:56,column:77}},"18":{start:{line:56,column:48},end:{line:56,column:74}},"19":{start:{line:56,column:58},end:{line:56,column:73}},"20":{start:{line:58,column:8},end:{line:60,column:10}},"21":{start:{line:59,column:12},end:{line:59,column:86}},"22":{start:{line:61,column:8},end:{line:61,column:32}},"23":{start:{line:70,column:22},end:{line:70,column:93}},"24":{start:{line:70,column:61},end:{line:70,column:91}},"25":{start:{line:71,column:8},end:{line:75,column:9}},"26":{start:{line:72,column:12},end:{line:72,column:56}},"27":{start:{line:74,column:12},end:{line:74,column:33}},"28":{start:{line:84,column:23},end:{line:84,column:115}},"29":{start:{line:84,column:59},end:{line:84,column:113}},"30":{start:{line:85,column:8},end:{line:85,column:24}},"31":{start:{line:96,column:22},end:{line:96,column:93}},"32":{start:{line:96,column:61},end:{line:96,column:91}},"33":{start:{line:97,column:8},end:{line:97,column:81}},"34":{start:{line:98,column:29},end:{line:98,column:56}},"35":{start:{line:99,column:8},end:{line:103,column:9}},"36":{start:{line:100,column:12},end:{line:100,column:36}},"37":{start:{line:102,column:12},end:{line:102,column:41}},"38":{start:{line:113,column:22},end:{line:113,column:93}},"39":{start:{line:113,column:61},end:{line:113,column:91}},"40":{start:{line:114,column:22},end:{line:114,column:49}},"41":{start:{line:115,column:8},end:{line:115,column:43}},"42":{start:{line:116,column:8},end:{line:120,column:9}},"43":{start:{line:117,column:12},end:{line:117,column:36}},"44":{start:{line:119,column:12},end:{line:119,column:41}},"45":{start:{line:130,column:8},end:{line:136,column:9}},"46":{start:{line:131,column:12},end:{line:131,column:56}},"47":{start:{line:133,column:27},end:{line:133,column:29}},"48":{start:{line:134,column:12},end:{line:134,column:77}},"49":{start:{line:134,column:48},end:{line:134,column:74}},"50":{start:{line:134,column:58},end:{line:134,column:73}},"51":{start:{line:135,column:12},end:{line:135,column:42}},"52":{start:{line:145,column:8},end:{line:145,column:35}},"53":{start:{line:154,column:26},end:{line:154,column:46}},"54":{start:{line:155,column:8},end:{line:155,column:99}},"55":{start:{line:164,column:26},end:{line:164,column:41}},"56":{start:{line:165,column:8},end:{line:165,column:99}},"57":{start:{line:169,column:0},end:{line:169,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:4},end:{line:4,column:5}},loc:{start:{line:4,column:18},end:{line:19,column:5}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:16},end:{line:11,column:17}},loc:{start:{line:11,column:21},end:{line:11,column:23}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:18,column:16},end:{line:18,column:17}},loc:{start:{line:18,column:21},end:{line:18,column:23}},line:18},"3":{name:"(anonymous_3)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:47},end:{line:44,column:5}},line:27},"4":{name:"(anonymous_4)",decl:{start:{line:51,column:4},end:{line:51,column:5}},loc:{start:{line:51,column:43},end:{line:62,column:5}},line:51},"5":{name:"(anonymous_5)",decl:{start:{line:56,column:41},end:{line:56,column:42}},loc:{start:{line:56,column:47},end:{line:56,column:75}},line:56},"6":{name:"(anonymous_6)",decl:{start:{line:58,column:20},end:{line:58,column:21}},loc:{start:{line:58,column:30},end:{line:60,column:9}},line:58},"7":{name:"(anonymous_7)",decl:{start:{line:69,column:4},end:{line:69,column:5}},loc:{start:{line:69,column:27},end:{line:76,column:5}},line:69},"8":{name:"(anonymous_8)",decl:{start:{line:70,column:54},end:{line:70,column:55}},loc:{start:{line:70,column:61},end:{line:70,column:91}},line:70},"9":{name:"(anonymous_9)",decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:33},end:{line:86,column:5}},line:83},"10":{name:"(anonymous_10)",decl:{start:{line:84,column:52},end:{line:84,column:53}},loc:{start:{line:84,column:59},end:{line:84,column:113}},line:84},"11":{name:"(anonymous_11)",decl:{start:{line:95,column:4},end:{line:95,column:5}},loc:{start:{line:95,column:53},end:{line:104,column:5}},line:95},"12":{name:"(anonymous_12)",decl:{start:{line:96,column:54},end:{line:96,column:55}},loc:{start:{line:96,column:61},end:{line:96,column:91}},line:96},"13":{name:"(anonymous_13)",decl:{start:{line:112,column:4},end:{line:112,column:5}},loc:{start:{line:112,column:46},end:{line:121,column:5}},line:112},"14":{name:"(anonymous_14)",decl:{start:{line:113,column:54},end:{line:113,column:55}},loc:{start:{line:113,column:61},end:{line:113,column:91}},line:113},"15":{name:"(anonymous_15)",decl:{start:{line:129,column:4},end:{line:129,column:5}},loc:{start:{line:129,column:44},end:{line:137,column:5}},line:129},"16":{name:"(anonymous_16)",decl:{start:{line:134,column:41},end:{line:134,column:42}},loc:{start:{line:134,column:47},end:{line:134,column:75}},line:134},"17":{name:"(anonymous_17)",decl:{start:{line:144,column:4},end:{line:144,column:5}},loc:{start:{line:144,column:27},end:{line:146,column:5}},line:144},"18":{name:"(anonymous_18)",decl:{start:{line:153,column:4},end:{line:153,column:5}},loc:{start:{line:153,column:29},end:{line:156,column:5}},line:153},"19":{name:"(anonymous_19)",decl:{start:{line:163,column:4},end:{line:163,column:5}},loc:{start:{line:163,column:17},end:{line:166,column:5}},line:163}},branchMap:{"0":{loc:{start:{line:27,column:26},end:{line:27,column:45}},type:"default-arg",locations:[{start:{line:27,column:41},end:{line:27,column:45}}],line:27},"1":{loc:{start:{line:30,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:30,column:8},end:{line:35,column:9}},{start:{line:30,column:8},end:{line:35,column:9}}],line:30},"2":{loc:{start:{line:39,column:8},end:{line:43,column:9}},type:"if",locations:[{start:{line:39,column:8},end:{line:43,column:9}},{start:{line:39,column:8},end:{line:43,column:9}}],line:39},"3":{loc:{start:{line:51,column:21},end:{line:51,column:41}},type:"default-arg",locations:[{start:{line:51,column:36},end:{line:51,column:41}}],line:51},"4":{loc:{start:{line:53,column:8},end:{line:57,column:9}},type:"if",locations:[{start:{line:53,column:8},end:{line:57,column:9}},{start:{line:53,column:8},end:{line:57,column:9}}],line:53},"5":{loc:{start:{line:56,column:48},end:{line:56,column:74}},type:"if",locations:[{start:{line:56,column:48},end:{line:56,column:74}},{start:{line:56,column:48},end:{line:56,column:74}}],line:56},"6":{loc:{start:{line:59,column:19},end:{line:59,column:85}},type:"cond-expr",locations:[{start:{line:59,column:47},end:{line:59,column:48}},{start:{line:59,column:52},end:{line:59,column:84}}],line:59},"7":{loc:{start:{line:59,column:52},end:{line:59,column:84}},type:"cond-expr",locations:[{start:{line:59,column:78},end:{line:59,column:79}},{start:{line:59,column:82},end:{line:59,column:84}}],line:59},"8":{loc:{start:{line:70,column:61},end:{line:70,column:91}},type:"binary-expr",locations:[{start:{line:70,column:61},end:{line:70,column:64}},{start:{line:70,column:68},end:{line:70,column:91}}],line:70},"9":{loc:{start:{line:71,column:8},end:{line:75,column:9}},type:"if",locations:[{start:{line:71,column:8},end:{line:75,column:9}},{start:{line:71,column:8},end:{line:75,column:9}}],line:71},"10":{loc:{start:{line:84,column:59},end:{line:84,column:113}},type:"binary-expr",locations:[{start:{line:84,column:59},end:{line:84,column:62}},{start:{line:84,column:66},end:{line:84,column:113}}],line:84},"11":{loc:{start:{line:95,column:33},end:{line:95,column:52}},type:"default-arg",locations:[{start:{line:95,column:48},end:{line:95,column:52}}],line:95},"12":{loc:{start:{line:96,column:61},end:{line:96,column:91}},type:"binary-expr",locations:[{start:{line:96,column:61},end:{line:96,column:64}},{start:{line:96,column:68},end:{line:96,column:91}}],line:96},"13":{loc:{start:{line:99,column:8},end:{line:103,column:9}},type:"if",locations:[{start:{line:99,column:8},end:{line:103,column:9}},{start:{line:99,column:8},end:{line:103,column:9}}],line:99},"14":{loc:{start:{line:112,column:26},end:{line:112,column:45}},type:"default-arg",locations:[{start:{line:112,column:41},end:{line:112,column:45}}],line:112},"15":{loc:{start:{line:113,column:61},end:{line:113,column:91}},type:"binary-expr",locations:[{start:{line:113,column:61},end:{line:113,column:64}},{start:{line:113,column:68},end:{line:113,column:91}}],line:113},"16":{loc:{start:{line:116,column:8},end:{line:120,column:9}},type:"if",locations:[{start:{line:116,column:8},end:{line:120,column:9}},{start:{line:116,column:8},end:{line:120,column:9}}],line:116},"17":{loc:{start:{line:129,column:25},end:{line:129,column:43}},type:"default-arg",locations:[{start:{line:129,column:39},end:{line:129,column:43}}],line:129},"18":{loc:{start:{line:130,column:8},end:{line:136,column:9}},type:"if",locations:[{start:{line:130,column:8},end:{line:136,column:9}},{start:{line:130,column:8},end:{line:136,column:9}}],line:130},"19":{loc:{start:{line:134,column:48},end:{line:134,column:74}},type:"if",locations:[{start:{line:134,column:48},end:{line:134,column:74}},{start:{line:134,column:48},end:{line:134,column:74}}],line:134}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0],"12":[0,0],"13":[0,0],"14":[0],"15":[0,0],"16":[0,0],"17":[0],"18":[0,0],"19":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"90b5e71d90ec92a10be9e9bda044a24b702aaa30"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2pijzdnxhl=function(){return actualCoverage;};}return actualCoverage;}cov_2pijzdnxhl();class MockDatabaseService{mockData=(cov_2pijzdnxhl().s[0]++,{events:[]});constructor(){cov_2pijzdnxhl().f[0]++;cov_2pijzdnxhl().s[1]++;this.addEvent({id:1,title:'an event',description:'something really cool',location:'Somewhere',eventDate:'01/01/2021'}).then(r=>{cov_2pijzdnxhl().f[1]++;});cov_2pijzdnxhl().s[2]++;this.addEvent({id:2,title:'another event',description:'something even cooler',location:'Somewhere Else',eventDate:'02/01/2021'}).then(r=>{cov_2pijzdnxhl().f[2]++;});}/**
     * Add a New Event
     * @param event
     * @param returnEvents
     * @returns {Promise<{event: {dislikes: number, id: number, likes: number}}|{events: []}>}
     */async addEvent(event,returnEvents=(cov_2pijzdnxhl().b[0][0]++,true)){cov_2pijzdnxhl().f[3]++;const{count}=(cov_2pijzdnxhl().s[3]++,await this.getEventsCount());const id=(cov_2pijzdnxhl().s[4]++,count+1);cov_2pijzdnxhl().s[5]++;if(!event.date){cov_2pijzdnxhl().b[1][0]++;cov_2pijzdnxhl().s[6]++;// If no date specified default to today's date
event.date=this.padDate(new Date().toLocaleString().split(',')[0]);}else{cov_2pijzdnxhl().b[1][1]++;cov_2pijzdnxhl().s[7]++;event.date=this.padDate(event.date);}cov_2pijzdnxhl().s[8]++;event.sortDate=this.createSortDate(event.date);const newEvent=(cov_2pijzdnxhl().s[9]++,{id,likes:0,dislikes:0,...event});cov_2pijzdnxhl().s[10]++;this.mockData.events.push(newEvent);cov_2pijzdnxhl().s[11]++;if(returnEvents){cov_2pijzdnxhl().b[2][0]++;cov_2pijzdnxhl().s[12]++;return await this.getEvents();}else{cov_2pijzdnxhl().b[2][1]++;cov_2pijzdnxhl().s[13]++;return{event:newEvent};}}/**
     * Get all events sorted by sortdate descending (newest to oldest)
     * @param includeNulls
     * @returns {Promise<{events: []}>}
     */async getEvents(includeNulls=(cov_2pijzdnxhl().b[3][0]++,false)){cov_2pijzdnxhl().f[4]++;let events=(cov_2pijzdnxhl().s[14]++,[]);cov_2pijzdnxhl().s[15]++;if(includeNulls){cov_2pijzdnxhl().b[4][0]++;cov_2pijzdnxhl().s[16]++;events=this.mockData.events;}else{cov_2pijzdnxhl().b[4][1]++;cov_2pijzdnxhl().s[17]++;this.mockData.events.forEach(ev=>{cov_2pijzdnxhl().f[5]++;cov_2pijzdnxhl().s[18]++;if(!!ev){cov_2pijzdnxhl().b[5][0]++;cov_2pijzdnxhl().s[19]++;events.push(ev);}else{cov_2pijzdnxhl().b[5][1]++;}});}cov_2pijzdnxhl().s[20]++;events.sort((a,b)=>{cov_2pijzdnxhl().f[6]++;cov_2pijzdnxhl().s[21]++;return a.sortDate===b.sortDate?(cov_2pijzdnxhl().b[6][0]++,0):(cov_2pijzdnxhl().b[6][1]++,a.sortDate<b.sortDate?(cov_2pijzdnxhl().b[7][0]++,1):(cov_2pijzdnxhl().b[7][1]++,-1));});cov_2pijzdnxhl().s[22]++;return{events:events};}/**
     * Get one event by unique ID
     * @param id
     * @returns {Promise<{event: null}|{event: *}>}
     */async getEventById(id){cov_2pijzdnxhl().f[7]++;const index=(cov_2pijzdnxhl().s[23]++,this.mockData.events.findIndex(obj=>{cov_2pijzdnxhl().f[8]++;cov_2pijzdnxhl().s[24]++;return(cov_2pijzdnxhl().b[8][0]++,obj)&&(cov_2pijzdnxhl().b[8][1]++,obj.id===parseInt(id));}));cov_2pijzdnxhl().s[25]++;if(index!==-1){cov_2pijzdnxhl().b[9][0]++;cov_2pijzdnxhl().s[26]++;return{event:this.mockData.events[index]};}else{cov_2pijzdnxhl().b[9][1]++;cov_2pijzdnxhl().s[27]++;return{event:null};}}/**
     * Get events by title
     * @param title
     * @returns {Promise<{events: *[]}>}
     */async getEventsByTitle(title){cov_2pijzdnxhl().f[9]++;const events=(cov_2pijzdnxhl().s[28]++,this.mockData.events.filter(obj=>{cov_2pijzdnxhl().f[10]++;cov_2pijzdnxhl().s[29]++;return(cov_2pijzdnxhl().b[10][0]++,obj)&&(cov_2pijzdnxhl().b[10][1]++,obj.title.toLowerCase()===title.toLowerCase());}));cov_2pijzdnxhl().s[30]++;return{events};}/**
     * Update event by ID
     * @param id
     * @param event
     * @param returnEvents
     * @returns {Promise<{event: *}|{events: *[]}>}
     */async updateEvent(id,event,returnEvents=(cov_2pijzdnxhl().b[11][0]++,true)){cov_2pijzdnxhl().f[11]++;const index=(cov_2pijzdnxhl().s[31]++,this.mockData.events.findIndex(obj=>{cov_2pijzdnxhl().f[12]++;cov_2pijzdnxhl().s[32]++;return(cov_2pijzdnxhl().b[12][0]++,obj)&&(cov_2pijzdnxhl().b[12][1]++,obj.id===parseInt(id));}));cov_2pijzdnxhl().s[33]++;this.mockData.events[index]={...this.mockData.events[index],...event};const updatedEvent=(cov_2pijzdnxhl().s[34]++,this.mockData.events[index]);cov_2pijzdnxhl().s[35]++;if(returnEvents){cov_2pijzdnxhl().b[13][0]++;cov_2pijzdnxhl().s[36]++;return this.getEvents();}else{cov_2pijzdnxhl().b[13][1]++;cov_2pijzdnxhl().s[37]++;return{event:updatedEvent};}}/**
     * Delete event by ID
     * @param id
     * @param returnEvents
     * @returns {Promise<{deletedEvent: *}|{events: *[]}>}
     */async deleteEvent(id,returnEvents=(cov_2pijzdnxhl().b[14][0]++,true)){cov_2pijzdnxhl().f[13]++;const index=(cov_2pijzdnxhl().s[38]++,this.mockData.events.findIndex(obj=>{cov_2pijzdnxhl().f[14]++;cov_2pijzdnxhl().s[39]++;return(cov_2pijzdnxhl().b[15][0]++,obj)&&(cov_2pijzdnxhl().b[15][1]++,obj.id===parseInt(id));}));const event=(cov_2pijzdnxhl().s[40]++,this.mockData.events[index]);cov_2pijzdnxhl().s[41]++;delete this.mockData.events[index];// sets the entry to null, maintains array length
cov_2pijzdnxhl().s[42]++;if(returnEvents){cov_2pijzdnxhl().b[16][0]++;cov_2pijzdnxhl().s[43]++;return this.getEvents();}else{cov_2pijzdnxhl().b[16][1]++;cov_2pijzdnxhl().s[44]++;return{deletedEvent:event};}}/**
     * Get count of events in Array
     * Important: Needed to generate sequential ID
     * @param includeNull
     * @returns {Promise<{count: number}>}
     */async getEventsCount(includeNull=(cov_2pijzdnxhl().b[17][0]++,true)){cov_2pijzdnxhl().f[15]++;cov_2pijzdnxhl().s[45]++;if(includeNull){cov_2pijzdnxhl().b[18][0]++;cov_2pijzdnxhl().s[46]++;return{count:this.mockData.events.length};}else{cov_2pijzdnxhl().b[18][1]++;const events=(cov_2pijzdnxhl().s[47]++,[]);cov_2pijzdnxhl().s[48]++;this.mockData.events.forEach(ev=>{cov_2pijzdnxhl().f[16]++;cov_2pijzdnxhl().s[49]++;if(!!ev){cov_2pijzdnxhl().b[19][0]++;cov_2pijzdnxhl().s[50]++;events.push(ev);}else{cov_2pijzdnxhl().b[19][1]++;}});cov_2pijzdnxhl().s[51]++;return{count:events.length};}}/**
     * Remove last entry from Array
     * Used during Unit Tests
     * @returns {Promise<void>}
     */async deleteLastEntry(){cov_2pijzdnxhl().f[17]++;cov_2pijzdnxhl().s[52]++;this.mockData.events.pop();}/**
     * Make the sortDate yyyy-mm-dd
     * @param eventDate
     * @returns {string}
     */createSortDate(eventDate){cov_2pijzdnxhl().f[18]++;const dateParts=(cov_2pijzdnxhl().s[53]++,eventDate.split('/'));cov_2pijzdnxhl().s[54]++;return`${dateParts[2]}-${dateParts[0].padStart(2,'0')}-${dateParts[1].padStart(2,'0')}`;}/**
     * Pad the event date by adding a leading zero where needed
     * @param date
     * @returns {string}
     */padDate(date){cov_2pijzdnxhl().f[19]++;const dateParts=(cov_2pijzdnxhl().s[55]++,date.split('/'));cov_2pijzdnxhl().s[56]++;return`${dateParts[0].padStart(2,'0')}/${dateParts[1].padStart(2,'0')}/${dateParts[2]}`;}}cov_2pijzdnxhl().s[57]++;module.exports=MockDatabaseService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,